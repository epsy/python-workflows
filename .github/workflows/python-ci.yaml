name: python-ci

on:
  workflow_call:
    inputs:
      python-versions:
        description: "JSON array of which Python versions to run tests on"
        default: |
          [
            'pypy3.9',
            '3.6',
            '3.7',
            '3.8',
            '3.9',
            '3.10',
            '3.11.0-rc.1 - 3.11',
          ]
        required: false
        type: string
      util-python-version:
        description: "Which version of Python to use for coverage testing / linting"
        default: '3.9'
        required: false
        type: string
      coverage-tox-target:
        description: "Target to give to tox -e for running coverage"
        default: cover
        required: false
        type: string
      package-folder:
        description: "What folders contains the source of this package"
        required: true
        type: string
      python-test-args:
        description: "What arguments to pass to python or coverage to run tests"
        required: false
        type: string
        default: -m unittest


jobs:
  test:
    name: "Run tests"
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      matrix:
        python-version: ${{ fromJSON(inputs.python-versions) }}
        experimental:
        - false
        include:
        - python-version: '3.10-dev'
          experimental: true
        - python-version: '3.11-dev'
          experimental: true

    runs-on: ${{ startsWith(matrix.python-version, "3.6") && 'ubuntu-20.04' || 'ubuntu-latest' }}

    steps:
    - uses: epsy/python-workflows/install-tox@main
      with:
        python-version: ${{ matrix.python-version }}
    - name: Test with tox
      uses: epsy/python-workflows/tox-ci@main
      with:
        tox-args: ""
        python-test-args: ${{ inputs.python-test-args }}
    - name: Verify that tox 'test' env ran
      run: cat ./tox-proof-test
      shell: bash

  cover:
    name: "Report coverage"
    runs-on: 'ubuntu-latest'
    steps:
    - uses: epsy/python-workflows/install-tox@main
      with:
        python-version: ${{ inputs.util-python-version }}
    - name: Gather coverage with tox
      uses: epsy/python-workflows/tox-ci@main
      with:
        tox-args: -e ${{ inputs.coverage-tox-target }}
        python-test-args: ${{ inputs.python-test-args }}

    - name: Verify that tox 'cover' env ran
      run: cat ./tox-proof-cover
    - name: 'Report coverage'
      uses: epsy/python-workflows/tox-ci@main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tox-args: -e coveralls-gh-actions
        python-test-args: ${{ inputs.python-test-args }}

  lint:
    name: "Run lint"
    runs-on: 'ubuntu-latest'
    steps:
    - uses: epsy/python-workflows/install-tox@main
      with:
        python-version: ${{ inputs.util-python-version }}
    - name: Run linter with tox
      uses: epsy/python-workflows/tox-ci@main
      with:
        tox-args: -e pyflakes
        python-test-args: ${{ inputs.python-test-args }}
        problem-matcher: pyflakes
      env:
        PACKAGE_FOLDER: ${{ inputs.package-folder }}
