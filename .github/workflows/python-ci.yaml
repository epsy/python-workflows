name: python-ci

on:
  workflow_call:
    inputs:
      util-python-version:
        description: "Which version of Python to use for coverage testing / linting"
        default: '3.9'
        required: false
        type: string
      coverage-tox-target:
        description: "Target to give to tox -e for running coverage"
        default: cover
        required: false
        type: string

    secrets:
      deletate_github_token:
        required: true
        type: string


jobs:
  test:
    runs-on: 'ubuntu-latest'
    continue-on-error: ${{ matrix.experimental }}
    strategy:
     matrix:
        experimental:
        - false
        task: test
        python-version:
        - '3.5'
        - 'pypy3'
        - '3.6'
        - '3.7'
        - '3.8'
        - '3.9'
        - '3.10'
        include:
        - python-version: '3.10-dev'
          task: test
          experimental: true
        - python-version: '3.11-dev'
          task: test
          experimental: true
        - python-version: ${{ inputs.util-python-version }}
          task: coverage
          experimental: false
        - python-version: ${{ inputs.util-python-version }}
          task: lint
          experimental: false

    steps:
    - uses: actions/checkout@v2
    - name: Setup python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
        architecture: x64
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install tox tox-gh-actions

    - name: Test with tox
      if: ${{ matrix.task == 'test' }}
      run: tox
    - name: Verify that tox 'test' env ran
      run: cat ./tox-test-proof

    - name: 'Run coverage'
      if: ${{ matrix.task == 'coverage' }}
      run: tox -e ${{ inputs.coverage-tox-target }}
    - name: 'Report coverage'
      if: ${{ matrix.task == 'coverage' }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: tox -e coveralls-gh-actions

    - name: 'Run linter'
      if: ${{ matrix.task == 'lint' }}
      run: tox -e pyflakes
