name: python-ci

on:
  workflow_call:
    inputs:
      util-python-version:
        description: "Which version of Python to use for coverage testing / linting"
        default: '3.9'
        required: false
        type: string
      coverage-tox-target:
        description: "Target to give to tox -e for running coverage"
        default: cover
        required: false
        type: string
      package-folder:
        description: "What folders contains the source of this package"
        required: true
        type: string


jobs:
  test:
    name: "Run tests"
    runs-on: 'ubuntu-latest'
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      matrix:
        python-version:
        - '3.5'
        - 'pypy3'
        - '3.6'
        - '3.7'
        - '3.8'
        - '3.9'
        - '3.10'
        experimental:
        - false
        include:
        - python-version: '3.10-dev'
          experimental: true
        - python-version: '3.11-dev'
          experimental: true

    steps:
    - uses: ./.github/actions/install-tox.yaml
      with:
        python-version: ${{ inputs.util-python-version }}
    - name: Test with tox
      uses: ./.github/actions/tox-ci.yaml
      with:
        tox-args: ""
    - name: Verify that tox 'test' env ran
      run: cat ./tox-proof-test

  cover:
    name: "Report coverage"
    runs-on: 'ubuntu-latest'
    steps:

    - name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJSON(github) }}
      run: echo "$GITHUB_CONTEXT"
    - name: Dump job context
      env:
        JOB_CONTEXT: ${{ toJSON(job) }}
      run: echo "$JOB_CONTEXT"
    - name: Dump steps context
      env:
        STEPS_CONTEXT: ${{ toJSON(steps) }}
      run: echo "$STEPS_CONTEXT"
    - name: Dump runner context
      env:
        RUNNER_CONTEXT: ${{ toJSON(runner) }}
      run: echo "$RUNNER_CONTEXT"
    - name: Dump strategy context
      env:
        STRATEGY_CONTEXT: ${{ toJSON(strategy) }}
      run: echo "$STRATEGY_CONTEXT"
    - name: Dump matrix context
      env:
        MATRIX_CONTEXT: ${{ toJSON(matrix) }}
      run: echo "$MATRIX_CONTEXT"

    - uses: ./.github/actions/install-tox.yaml
      with:
        python-version: ${{ inputs.util-python-version }}
    - name: Gather coverage with tox
      uses: ./.github/actions/tox-ci.yaml
      with:
        tox-args: -e ${{ inputs.coverage-tox-target }}
    - name: Verify that tox 'cover' env ran
      run: cat ./tox-proof-cover
    - name: 'Report coverage'
      uses: ./.github/actions/tox-ci.yaml
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tox-args: -e coveralls-gh-actions

  lint:
    name: "Run lint"
    runs-on: 'ubuntu-latest'
    steps:
    - uses: ./.github/actions/install-tox.yaml
      with:
        python-version: ${{ inputs.util-python-version }}
    - name: Run linter with tox
      uses: ./.github/actions/tox-ci.yaml
      with:
        python-version: ${{ inputs.util-python-version }}
        tox-args: -e pyflakes
