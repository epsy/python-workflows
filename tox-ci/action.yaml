name: "Shared Tox"
description: |
  Invokes Tox using shared config.

  Pre-requires tox being installed.

inputs:
  tox-args:
    description: "Arguments to pass to tox"
    required: true
    type: string
  python-test-args:
    description: "What arguments to pass to python or coverage to run tests"
    required: true
    type: string
  problem-matcher:
    description: "Which problem matcher to use, if any"
    required: false
    type: string
    default: ""

runs:
  using: "composite"
  steps:
  - name: "Are we using isolated builds?"
    id: get-is-isolated-build
    shell: bash
    run: >
      if grep '^[build-system]$' pyproject.toml >/dev/null 2>&1
      then
        echo "::set-output name=is-isolated-build::true"
        echo "Yes"
      else
        echo "::set-output name=is-isolated-build::false"
        echo "No"
      fi
  - name: Enable problem matching
    if: ${{ inputs.problem-matcher != '' }}
    run: echo "::add-matcher::${{ github.action_path }}/problem-matchers/${{ inputs.problem-matcher }}.json"
    shell: bash
  - name: Run tox
    run: tox -c ${{ github.action_path }}/tox-ci.ini ${{ inputs.tox-args }}
    shell: bash
    env:
      TOX_PROJECT_DIR: ${{ github.workspace }}
      TOX_PYTHON_TEST_ARGS: ${{ inputs.python-test-args }}
      TOX_ISOLATED_BUILD: ${{ steps.get-is-isolated-build.outputs.is-isolated-build }}
      RUN_PYFLAKES_BIN: ${{ github.action_path }}/run-pyflakes.sh
  - name: Disable problem matching
    if: ${{ inputs.problem-matcher != '' }}
    run: echo "::remove-matcher owner=${{ inputs.problem-matcher }}::"
    shell: bash
